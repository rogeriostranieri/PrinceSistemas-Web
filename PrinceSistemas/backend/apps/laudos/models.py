from django.db import models

class Laudo(models.Model):
    id_laudos = models.SmallIntegerField(primary_key=True, db_column='ID_Laudos')
    razaosocial = models.CharField(max_length=255, db_column='RazaoSocial', blank=True, null=True)
    cnpj = models.CharField(max_length=255, db_column='CNPJ', blank=True, null=True)
    endereco = models.TextField(db_column='Endereco', blank=True, null=True)
    endnum = models.CharField(max_length=255, db_column='EndNum', blank=True, null=True)
    endcomp = models.TextField(db_column='EndComp', blank=True, null=True)
    enddata = models.CharField(max_length=255, db_column='EndData', blank=True, null=True)
    endquadra = models.CharField(max_length=255, db_column='EndQuadra', blank=True, null=True)
    endzona = models.CharField(max_length=255, db_column='EndZona', blank=True, null=True)
    endcep = models.CharField(max_length=255, db_column='EndCEP', blank=True, null=True)
    telefone = models.CharField(max_length=255, db_column='Telefone', blank=True, null=True)
    cnae = models.TextField(db_column='CNAE', blank=True, null=True)
    natureza_pedido = models.CharField(max_length=255, db_column='NaturezaDoPedido', blank=True, null=True)
    natureza_pedido_obs = models.TextField(db_column='NaturezaDoPedidoOBS', blank=True, null=True)
    requerente = models.CharField(max_length=255, db_column='Requerente', blank=True, null=True)
    cpf_requerente = models.CharField(max_length=255, db_column='CPFRequerente', blank=True, null=True)
    end_requerente = models.TextField(db_column='EndRequerente', blank=True, null=True)
    fone_requerente = models.CharField(max_length=255, db_column='FoneRequerente', blank=True, null=True)
    email_requerente = models.CharField(max_length=255, db_column='EmailRequerente', blank=True, null=True)
    cnpj_requerente = models.CharField(max_length=255, db_column='CNPJRequerente', blank=True, null=True)
    rg_requerente = models.CharField(max_length=255, db_column='RGRequerente', blank=True, null=True)
    ramodeatividade = models.TextField(db_column='Ramodeatividade', blank=True, null=True)
    obs = models.TextField(db_column='Obs', blank=True, null=True)
    area = models.CharField(max_length=255, db_column='area', blank=True, null=True)
    resptecnico = models.CharField(max_length=255, db_column='Resptecnico', blank=True, null=True)
    resptecnico_numero = models.CharField(max_length=255, db_column='ResptecnicoNumero', blank=True, null=True)
    lembrete = models.CharField(max_length=20, db_column='Lembrete', blank=True, null=True)
    endbairro = models.TextField(db_column='EndBairro', blank=True, null=True)
    endcidade = models.TextField(db_column='EndCidade', blank=True, null=True)
    endestado = models.TextField(db_column='EndEstado', blank=True, null=True)
    bombeiros = models.CharField(max_length=255, db_column='Bombeiros', blank=True, null=True)
    bombeiros_situacao = models.CharField(max_length=255, db_column='BombeirosSituacao', blank=True, null=True)
    bombeiros_venc = models.CharField(max_length=255, db_column='BombeirosVenc', blank=True, null=True)
    ambiental = models.CharField(max_length=255, db_column='Ambiental', blank=True, null=True)
    ambiental_situacao = models.CharField(max_length=255, db_column='AmbientalSituacao', blank=True, null=True)
    ambiental_venc = models.CharField(max_length=255, db_column='AmbientalVenc', blank=True, null=True)
    viabilidade = models.CharField(max_length=255, db_column='Viabilidade', blank=True, null=True)
    viabilidade_situacao = models.CharField(max_length=255, db_column='ViabilidadeSituacao', blank=True, null=True)
    viabilidade_vec = models.CharField(max_length=255, db_column='ViabilidadeVec', blank=True, null=True)
    sanitario = models.CharField(max_length=255, db_column='Sanitario', blank=True, null=True)
    sanitario_situacao = models.CharField(max_length=255, db_column='SanitarioSituacao', blank=True, null=True)
    sanitario_venc = models.CharField(max_length=255, db_column='SanitarioVenc', blank=True, null=True)
    setran = models.CharField(max_length=255, db_column='Setran', blank=True, null=True)
    setran_situacao = models.CharField(max_length=255, db_column='SetranSituacao', blank=True, null=True)
    setran_venc = models.CharField(max_length=255, db_column='SetranVenc', blank=True, null=True)
    bombeiro_exigencia = models.TextField(db_column='BombeiroExigencia', blank=True, null=True)
    ambiental_exigencia = models.TextField(db_column='AmbientalExigencia', blank=True, null=True)
    viabilidade_exigencia = models.TextField(db_column='ViabilidadeExigencia', blank=True, null=True)
    sanitario_exigencia = models.TextField(db_column='SanitarioExigencia', blank=True, null=True)
    setran_exigencia = models.TextField(db_column='SetranExigencia', blank=True, null=True)
    bombeiro_data_provisorio = models.CharField(max_length=255, db_column='BombeiroDataProvisorio', blank=True, null=True)
    ambiental_data_provisorio = models.CharField(max_length=255, db_column='AmbientalDataProvisorio', blank=True, null=True)
    viabilidade_data_provisorio = models.CharField(max_length=255, db_column='ViabilidadeDataProvisorio', blank=True, null=True)
    sanitario_data_provisorio = models.CharField(max_length=255, db_column='SanitarioDataProvisorio', blank=True, null=True)
    setran_data_provisorio = models.CharField(max_length=255, db_column='SetranDataProvisorio', blank=True, null=True)
    bombeiro_n_processo = models.TextField(db_column='BombeiroNProcesso', blank=True, null=True)
    bombeiro_data_ped_processo = models.TextField(db_column='BombeiroDataPedProcesso', blank=True, null=True)
    nlaudo = models.CharField(max_length=255, db_column='Nlaudo', blank=True, null=True)
    situacao = models.CharField(max_length=255, db_column='Situacao', blank=True, null=True)
    data_criado = models.CharField(max_length=255, db_column='DataCriado', blank=True, null=True)
    data_entrada = models.CharField(max_length=255, db_column='DataEntrada', blank=True, null=True)
    pendencia = models.CharField(max_length=255, db_column='Pendencia', blank=True, null=True)
    modelo_sistema = models.CharField(max_length=255, db_column='ModeloSistema', blank=True, null=True)
    avisardia = models.CharField(max_length=255, db_column='AvisarDia', blank=True, null=True)
    cad_imob = models.CharField(max_length=255, db_column='CadImob', blank=True, null=True)
    cmc = models.CharField(max_length=255, db_column='CMC', blank=True, null=True)
    area2 = models.TextField(db_column='area2', blank=True, null=True)
    ponto_ref = models.TextField(db_column='PontoRef', blank=True, null=True)
    sanitariocontrole1 = models.CharField(max_length=255, db_column='Sanitariocontrole1', blank=True, null=True)
    sanitariocontrole2 = models.CharField(max_length=255, db_column='Sanitariocontrole2', blank=True, null=True)
    sanitariocontrole3 = models.CharField(max_length=255, db_column='Sanitariocontrole3', blank=True, null=True)
    observacao = models.TextField(db_column='Observacao', blank=True, null=True)
    protocolo_tipo = models.TextField(db_column='ProtocoloTipo', blank=True, null=True)
    protocolo_n = models.CharField(max_length=255, db_column='ProtocoloN', blank=True, null=True)
    protocolo_ano = models.CharField(max_length=255, db_column='ProtocoloAno', blank=True, null=True)
    protocolo_senha = models.TextField(db_column='ProtocoloSenha', blank=True, null=True)
    historico = models.TextField(db_column='Historico', blank=True, null=True)
    bombeiro_situacao = models.TextField(db_column='BombeiroSituacao', blank=True, null=True)
    bombeiro_provisorio_data = models.TextField(db_column='BombeiroProvisorioDATA', blank=True, null=True)
    ambiental_provisorio_data = models.TextField(db_column='AmbientalProvisorioDATA', blank=True, null=True)
    viabilidade_provisorio_data = models.TextField(db_column='ViabilidadeProvisorioDATA', blank=True, null=True)
    sanitario_provisorio_data = models.TextField(db_column='SanitarioProvisorioDATA', blank=True, null=True)
    setran_provisorio_data = models.TextField(db_column='SetranProvisorioDATA', blank=True, null=True)
    orgao_rg_requerente = models.TextField(db_column='OrgaoRGRequerente', blank=True, null=True)
    estado_orgao_rg_requerente = models.TextField(db_column='EstadoOrgaoRGRequerente', blank=True, null=True)
    numero_processo = models.TextField(db_column='NumeroProcesso', blank=True, null=True)
    recibo_processo = models.TextField(db_column='ReciboProcesso', blank=True, null=True)
    prioridade = models.CharField(max_length=20, db_column='Prioridade', blank=True, null=True)
    matriz = models.TextField(db_column='Matriz', blank=True, null=True)
    bombeiro_data_multa = models.TextField(db_column='BombeiroDataMulta', blank=True, null=True)
    nlaudo_secundario = models.TextField(db_column='NlaudoSecundario', blank=True, null=True)
    cnae_primario = models.TextField(db_column='CNAEPrimario', blank=True, null=True)
    alvara = models.TextField(db_column='Alvara', blank=True, null=True)

    def normalizar_bool(self, valor):
        if not valor:
            return False
        valor = str(valor).strip().lower()
        return valor in ['checked', 'sim', 'true', '1', 't']

    def save(self, *args, **kwargs):
        # Normaliza antes de salvar
        if isinstance(self.lembrete, str):
            self.lembrete = self.normalizar_bool(self.lembrete)
        if isinstance(self.prioridade, str):
            self.prioridade = self.normalizar_bool(self.prioridade)
        super().save(*args, **kwargs)

    class Meta:
        db_table = 'Laudos'
        managed = False

    def __str__(self):
        return self.razaosocial or str(self.id_laudos)